{"uid":"83faedbfcddad28","name":"test_BusinessSave[851888-S888-1]","fullName":"test_business_chance.Test_BusinessChance#test_BusinessSave","historyId":"b7ff12e0ef2ce7bf6ede771cf3f66c77","time":{"start":1710871242948,"stop":1710871243025,"duration":77},"status":"failed","statusMessage":"AssertionError: assert 500 == 200","statusTrace":"self = <test_business_chance.Test_BusinessChance object at 0x000001F3377BC460>, amount = '851888', suffix = 'S888'\nsale_stage = 1\n\n    @pytest.mark.parametrize('amount, suffix, sale_stage',\n                             [(''.join(str(s) for s in random.sample(range(10), 3)) + '888', randomUse + 'S888', 1),\n                              (''.join(str(s) for s in random.sample(range(10), 3)) + '666', randomUse + 'S666', 1)])\n    def test_BusinessSave(self, amount, suffix, sale_stage):\n        Authorization = 'Bearer ' + get_token\n        headers = {\n            \"Authorization\": Authorization,\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) \"\n                          \"Chrome/103.0.0.0 Safari/537.36\",\n            \"tenantId\": \"1586979014478311425\",\n            \"Content-Type\": \"application/json\"\n        }\n        amount = amount\n        name = \"UseAmount\" + suffix\n        saleStage = sale_stage  # 销售阶段1-初步接洽、2-需求确定、3-方案/报价、4-谈判审核、5-赢单、6输单\n        url = \"http://192.168.3.155:8080/crm/business-chance/save\"\n        data = {\n            \"amount\": amount,\n            \"customerId\": '1592578254873063425',\n            \"endDate\": \"2028-12-30T08:08:08.888Z\",\n            \"marketActivity\": \"string.+\",\n            \"name\": name,\n            \"remark\": \"这是很短的备注\",\n            \"saleStage\": saleStage,\n            \"source\": 2,\n            \"type\": 3\n        }\n        # print(data)\n        r = requests.post(url=url, headers=headers, data=json.dumps(data))\n        print(\"==========看下打印情况===========\")\n        print(r.text)\n    \n>       assert json.loads(r.text)[\"code\"] == 200  # r\nE       assert 500 == 200\n\ntest_business_chance.py:65: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_Test_BusinessChance","time":{"start":1710871242946,"stop":1710871242946,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"afterStages":[{"name":"_xunit_setup_method_fixture_Test_BusinessChance::0","time":{"start":1710871243041,"stop":1710871243041,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"labels":[{"name":"suite","value":"test_business_chance"},{"name":"subSuite","value":"Test_BusinessChance"},{"name":"host","value":"SK-20211221XKQO"},{"name":"thread","value":"14564-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_business_chance"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"amount","value":"'851888'"},{"name":"sale_stage","value":"1"},{"name":"suffix","value":"'S888'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":["failed"],"flaky":false}],"tags":[]},"source":"83faedbfcddad28.json","parameterValues":["'851888'","1","'S888'"]}