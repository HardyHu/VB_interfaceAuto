{"name": "test_ma_get_list", "status": "failed", "statusDetails": {"message": "AssertionError: assert '物料名称213' in []", "trace": "self = <test_PLM_material.Test_Material object at 0x000001F3376C6EE0>\n\n    def test_ma_get_list(self):\n        \"\"\"\n        校验第一页的数据是否准确\n        :return: a list will be seeing\n        \"\"\"\n        Authorization = 'Bearer ' + get_token\n    \n        headers = {\n            \"Authorization\": Authorization,\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) \"\n                          \"Chrome/103.0.0.0 Safari/537.36\",\n            \"Content-Type\": \"application/json\"\n        }\n    \n        params = {\n            \"categoryId\": \"\",\n            \"current\": 1,\n            \"searchWord\": \"\",\n            \"size\": 10\n        }\n        r = requests.post(url=deal_root()[1], headers=headers, data=json.dumps(params))\n        # print(r.text)\n        resPj = json.loads(r.text)\n        for i in resPj['data']['records']:\n            name = i['name']\n            newlist.append(name)\n        print(newlist)\n    \n>       assert '物料名称213' in newlist\nE       AssertionError: assert '物料名称213' in []\n\ntest_PLM_material.py:108: AssertionError"}, "description": "\n        校验第一页的数据是否准确\n        :return: a list will be seeing\n        ", "start": 1710871235979, "stop": 1710871236037, "uuid": "f8653713-206a-4d15-b4ae-6ad27eb898c4", "historyId": "2bc2f466478e625e4d19b7c6a30cf208", "testCaseId": "d5108c84bbff047d71a8471fa41e1db9", "fullName": "test_PLM_material.Test_Material#test_ma_get_list", "labels": [{"name": "suite", "value": "test_PLM_material"}, {"name": "subSuite", "value": "Test_Material"}, {"name": "host", "value": "SK-20211221XKQO"}, {"name": "thread", "value": "14564-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_PLM_material"}]}